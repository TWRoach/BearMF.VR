class Header {
    gameType = Coop;
    minPlayers = 1;
    maxPlayers = 229;
    sandbox = 0;
};

onLoadMission = "Blackbear COOP.";
author = "Kilroy.";
loadScreen = "Blackbear.paa";
enableDebugConsole = 1;
disabledAI = 1;
respawn = 1;
respawnDelay = 3;
respawnButton = 1;
respawnOnStart = -1;
respawnTemplates[] = {"Seagull","f_spectator"};

showGroupIndicator = 0;
showHUD[] = {true, true, false, false, true, true, false, true};

class Params {
    class f_param_debugMode {
        title = "Debug Mode";
        values[] = {0,1};
        texts[] = {"Off","On"};
        default = 0;
        code = "f_var_debugMode = %1";
    };
    class f_param_mission_timer {
        title = "Briefing Stage";
        values[] = {-1,0,1,2,3,4,5,6,7,8,9,10,15,20,25,30};
        texts[] = {"Off","Infinite","1 Minute","2 Minutes","3 Minutes","4 Minutes","5 Minutes","6 Minutes","7 Minutes","8 Minutes","9 Minutes","10 Minutes","15 Minutes","20 Minutes","25 Minutes","30 Minutes"};
        default = 0;
        code = "f_var_mission_timer = %1";
    };
    class arc_param_duplex {
        title = "ACRE Duplex Option";
        values[] = {0,1};
        texts[] = {"Half Duplex", "Full Duplex"};
        default = 1;
        code = "arc_param_duplex = if (%1 == 1) then {true} else {false};";
    };
    class arc_param_babel_west {
        title = "ACRE Babel Language (BLUFOR)";
        values[] = {0,1,2,3};
        texts[] = {"English","Russian","Greek","Use Config"};
        default = 0;
        code = "arc_param_babel_west = switch (%1) do {case 0: {'english'};case 1: {'russian'};case 2: {'greek'};case 3: {'config'};};";
    };
    class arc_param_babel_east {
        title = "ACRE Babel Language (OPFOR)";
        values[] = {0,1,2,3};
        texts[] = {"English","Russian","Greek","Use Config"};
        default = 0;
        code = "arc_param_babel_east = switch (%1) do {case 0: {'english'};case 1: {'russian'};case 2: {'greek'};case 3: {'config'};};";
    };
    class arc_param_babel_resistance {
        title = "ACRE Babel Language (INDFOR)";
        values[] = {0,1,2,3};
        texts[] = {"English","Russian","Greek","Use Config"};
        default = 0;
        code = "arc_param_babel_resistance = switch (%1) do {case 0: {'english'};case 1: {'russian'};case 2: {'greek'};case 3: {'config'};};";
    };
    class arc_param_acre_reveal {
        title = "ACRE Reveal to AI";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
        code = "arc_param_acre_reveal = if (%1 == 1) then {true} else {false};";
    };
    class arc_param_aircraft_carrier {
        title = "Sandbox: Deploy On Aircraft Carrier";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 0;
        code = "arc_param_aircraft_carrier = if (%1 == 1) then {true} else {false};";
    };
    #include "f\themes\param.hpp"
};

class CfgDebriefing {
    class End1 {
        title = "藍方獲勝";
        subtitle = "";
        description = "";
    };
    class End2 {
        title = "紅方獲勝";
        subtitle = "";
        description = "";
    };
    class End3 {
        title = "中立方獲勝";
        subtitle = "";
        description = "";
    };
    class End4 {
        title = "平民獲勝";
        subtitle = "";
        description = "";
    };
    class End5 {
        title = "平局";
        subtitle = "";
        description = "";
    };
    class End6 {
        title = "所有團隊都輸了";
        subtitle = "";
        description = "";
    };
};

class CfgRespawnTemplates {
    class f_spectator {
        onPlayerRespawn = "f_fnc_CamInit";
    };
    class Seagull {
        onPlayerRespawn = "";
    };
};

#include "f\spect\config.hpp"

class CfgFunctions {
    #include "f\arc\config.hpp"

    class F {
        class common {
            file = "f\common";
            class processParamsArray {
                preInit = 1;
                postInit = 1;
            };
        };
        class mpEnd {
            file = "f\mpEnd";
            class mpEnd {};
            class mpEndReceiver {};
        };
        class assignGear {
            file = "f\assignGear";
            class assignGear {};
        };
        class setGroupID {
            file = "f\setGroupID";
            class setGroupID {};
        };
        class FTMemberMarkers {
            file = "f\FTMemberMarkers";
            class SetLocalFTMemberMarkers {};
            class GetMarker {};
        };
        class safeStart {
            file = "f\safeStart";
            class safety {};
            class safeStartLoop {};
        };
        class Themes {
            file = "f\themes";
            class getThemeAssignGear {};
        };

        #include "f\spect\functions.hpp"
    };
};

#include "config.hpp"
#include "f\arc\xeh.hpp"
#include "f\arc\sandbox.hpp"
#include "f\ui\include.hpp"
#include "f\arc\attributes.hpp"
#include "f\themes\config.hpp"
